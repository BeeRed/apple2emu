

class CPU6502( object ):
	"""
	Main Object for the 6502 CPU
	"""

	def __init__( self ):
		self.init_opcodes( )



	def init_opcodes( ):
		self.opcodes = {
		   #  'op code',  # of Bytes,  # of Cycles
		   '00': ( 'BRK', implied, 7     , 0, 0 ),
		   '01': ( 'ORA', izx 6 , 2, 6 ),
		   '05': ( 'ORA', zp 3  , 2, 3 ),
		   '06': ( 'ASL', zp 5  , 2, 5 ),
		   '08': ( 'PHP', 3     , 1, 3 ),
		   '09': ( 'ORA', imm 2 , 2, 2 ),
		   '0A': ( 'ASL', 2     , 1, 2 ),
		   '0D': ( 'ORA', abs 4 , 3, 4 ),
		   '0E': ( 'ASL', abs 6 , 3, 6 ),
		   '10': ( 'BPL', rel 2*, 2, 3 ),
		   '11': ( 'ORA', izy 5*, 2, 5 ),
		   '15': ( 'ORA', zpx 4 , 2, 4 ),
		   '16': ( 'ASL', zpx 6 , 2, 6 ),
		   '18': ( 'CLC', 2     , 1, 2 ),
		   '19': ( 'ORA', aby 4*, 3, 4 ),
		   '1D': ( 'ORA', abx 4*, 3, 4 ),
		   '1E': ( 'ASL', abx 7 , 3, 7 ),
		   '20': ( 'JSR', abs 6 , X, 6 ),
		   '21': ( 'AND', izx 6 , 2, 6 ),
		   '24': ( 'BIT', zp 3  , 2, 3 ),
		   '25': ( 'AND', zp 3  , 2, 3 ),
		   '26': ( 'ROL', zp 5  , 2, 5 ),
		   '28': ( 'PLP', 4     , 1, 4 ),
		   '29': ( 'AND', imm 2 , 2, 2 ),
		   '2A': ( 'ROL', 2     , 1, 2 ),
		   '2C': ( 'BIT', abs 4 , 3, 4 ),
		   '2D': ( 'AND', abs 4 , 3, 4 ),
		   '2E': ( 'ROL', abs 6 , 3, 6 ),
		   '30': ( 'BMI', rel 2*, 2, 2 ),
		   '31': ( 'AND', izy 5*, 2, 5 ),
		   '35': ( 'AND', zpx 4 , 2, 4 ),
		   '36': ( 'ROL', zpx 6 , 2, 6 ),
		   '38': ( 'SEC', 2     , 1, 2 ),
		   '39': ( 'AND', aby 4*, 3, 4 ),
		   '3D': ( 'AND', abx 4*, 3, 4 ),
		   '3E': ( 'ROL', abx 7 , 3, 7 ),
		   '40': ( 'RTI', 6     , X, 6 ),
		   '41': ( 'EOR', izx 6 , 2, 6 ),
		   '45': ( 'EOR', zp 3  , 2, 3 ),
		   '46': ( 'LSR', zp 5  , 2, 5 ),
		   '48': ( 'PHA', 3     , 1, 3 ),
		   '49': ( 'EOR', imm 2 , 2, 2 ),
		   '4A': ( 'LSR', 2     , 1, 2 ),
		   '4C': ( 'JMP', abs 3 , X, 3 ),
		   '4D': ( 'EOR', abs 4 , 3, 4 ),
		   '4E': ( 'LSR', abs 6 , 3, 6 ),
		   '50': ( 'BVC', rel 2*, 2, 3 ),
		   '51': ( 'EOR', izy 5*, 2, 5 ),
		   '55': ( 'EOR', zpx 4 , 2, 4 ),
		   '56': ( 'LSR', zpx 6 , 2, 6 ),
		   '58': ( 'CLI', 2     , 1, 2 ),
		   '59': ( 'EOR', aby 4*, 3, 4 ),
		   '5D': ( 'EOR', abx 4*, 3, 4 ),
		   '5E': ( 'LSR', abx 7 , 3, 7 ),
		   '60': ( 'RTS', 6     , X, 6 ),
		   '61': ( 'ADC', izx 6 , 2, 6 ),
		   '65': ( 'ADC', zp 3  , 2, 3 ),
		   '66': ( 'ROR', zp 5  , 2, 5 ),
		   '68': ( 'PLA', 4     , 1, 4 ),
		   '69': ( 'ADC', imm 2 , 2, 2 ),
		   '6A': ( 'ROR', 2     , 1, 2 ),
		   '6C': ( 'JMP', ind 5 , X, 5 ),
		   '6D': ( 'ADC', abs 4 , 3, 4 ),
		   '6E': ( 'ROR', abs 6 , 3, 6 ),
		   '70': ( 'BVS', rel 2*, 2, 2 ),
		   '71': ( 'ADC', izy 5*, 2, 5 ),
		   '75': ( 'ADC', zpx 4 , 2, 4 ),
		   '76': ( 'ROR', zpx 6 , 2, 6 ),
		   '78': ( 'SEI', 2     , 1, 2 ),
		   '79': ( 'ADC', aby 4*, 3, 4 ),
		   '7D': ( 'ADC', abx 4*, 3, 4 ),
		   '7E': ( 'ROR', abx 7 , 3, 7 ),
		   '81': ( 'STA', izx 6 , 2, 6 ),
		   '84': ( 'STY', zp 3  , 2, 3 ),
		   '85': ( 'STA', zp 3  , 2, 3 ),
		   '86': ( 'STX', zp 3  , 2, 3 ),
		   '88': ( 'DEY', 2     , 1, 2 ),
		   '8A': ( 'TXA', 2     , 1, 2 ),
		   '8C': ( 'STY', abs 4 , 3, 4 ),
		   '8D': ( 'STA', abs 4 , 3, 4 ),
		   '8E': ( 'STX', abs 4 , 3, 4 ),
		   '90': ( 'BCC', rel 2*, 2, 3 ),
		   '91': ( 'STA', izy 6 , 2, 6 ),
		   '94': ( 'STY', zpx 4 , 2, 4 ),
		   '95': ( 'STA', zpx 4 , 2, 4 ),
		   '96': ( 'STX', zpy 4 , 2, 4 ),
		   '98': ( 'TYA', 2     , 1, 2 ),
		   '99': ( 'STA', aby 5 , 3, 5 ),
		   '9A': ( 'TXS', 2     , X, 2 ),
		   '9D': ( 'STA', abx 5 , 3, 5 ),
		   'A0': ( 'LDY', imm 2 , 2, 2 ),
		   'A1': ( 'LDA', izx 6 , 2, 6 ),
		   'A2': ( 'LDX', imm 2 , 2, 2 ),
		   'A4': ( 'LDY', zp 3  , 2, 3 ),
		   'A5': ( 'LDA', zp 3  , 2, 3 ),
		   'A6': ( 'LDX', zp 3  , 2, 3 ),
		   'A8': ( 'TAY', 2     , 1, 2 ),
		   'A9': ( 'LDA', imm 2 , 2, 2 ),
		   'AA': ( 'TAX', 2     , 1, 2 ),
		   'AC': ( 'LDY', abs 4 , 3, 4 ),
		   'AD': ( 'LDA', abs 4 , 3, 4 ),
		   'AE': ( 'LDX', abs 4 , 3, 4 ),
		   'B0': ( 'BCS', rel 2*, 2, 2 ),
		   'B1': ( 'LDA', izy 5*, 2, 5 ),
		   'B4': ( 'LDY', zpx 4 , 2, 4 ),
		   'B5': ( 'LDA', zpx 4 , 2, 4 ),
		   'B6': ( 'LDX', zpy 4 , 2, 4 ),
		   'B8': ( 'CLV', 2     , 1, 2 ),
		   'B9': ( 'LDA', aby 4*, 3, 4 ),
		   'BA': ( 'TSX', 2     , 1, 2 ),
		   'BC': ( 'LDY', abx 4*, 3, 4 ),
		   'BD': ( 'LDA', abx 4*, 3, 4 ),
		   'BE': ( 'LDX', aby 4*, 3, 4 ),
		   'C0': ( 'CPY', imm 2 , 2, 2 ),
		   'C1': ( 'CMP', izx 6 , 2, 6 ),
		   'C4': ( 'CPY', zp 3  , 2, 3 ),
		   'C5': ( 'CMP', zp 3  , 2, 3 ),
		   'C6': ( 'DEC', zp 5  , 2, 5 ),
		   'C8': ( 'INY', 2     , 1, 2 ),
		   'C9': ( 'CMP', imm 2 , 2, 2 ),
		   'CA': ( 'DEX', 2     , 1, 2 ),
		   'CC': ( 'CPY', abs 4 , 3, 4 ),
		   'CD': ( 'CMP', abs 4 , 3, 4 ),
		   'CE': ( 'DEC', abs 6 , 3, 6 ),
		   'D0': ( 'BNE', rel 2*, 2, 3 ),
		   'D1': ( 'CMP', izy 5*, 2, 5 ),
		   'D5': ( 'CMP', zpx 4 , 2, 4 ),
		   'D6': ( 'DEC', zpx 6 , 2, 6 ),
		   'D8': ( 'CLD', 2     , 1, 2 ),
		   'D9': ( 'CMP', aby 4*, 3, 4 ),
		   'DD': ( 'CMP', abx 4*, 3, 4 ),
		   'DE': ( 'DEC', abx 7 , 3, 7 ),
		   'E0': ( 'CPX', imm 2 , 2, 2 ),
		   'E1': ( 'SBC', izx 6 , 2, 6 ),
		   'E4': ( 'CPX', zp 3  , 2, 3 ),
		   'E5': ( 'SBC', zp 3  , 2, 3 ),
		   'E6': ( 'INC', zp 5  , 2, 5 ),
		   'E8': ( 'INX', 2     , 1, 2 ),
		   'E9': ( 'SBC', imm 2 , 2, 2 ),
		   'EA': ( 'NOP', 2     , 1, 2 ),
		   'EC': ( 'CPX', abs 4 , 3, 4 ),
		   'ED': ( 'SBC', abs 4 , 3, 4 ),
		   'EE': ( 'INC', abs 6 , 3, 6 ),
		   'F0': ( 'BEQ', rel 2*, 2, 2 ),
		   'F1': ( 'SBC', izy 5*, 2, 5 ),
		   'F5': ( 'SBC', zpx 4 , 2, 4 ),
		   'F6': ( 'INC', zpx 6 , 2, 6 ),
		   'F8': ( 'SED', 2     , 1, 2 ),
		   'F9': ( 'SBC', aby 4*, 3, 4 ),
		   'FD': ( 'SBC', abx 4*, 3, 4 ),
		   'FE': ( 'INC', abx 7 , 3, 7 ),
	}


def main( ):
	6502_cpu = CPU6502( )

if __name__ == '__main__':
	main( )
